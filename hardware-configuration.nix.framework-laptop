# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "thunderbolt" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" "hid_multitouch" ];
  boot.extraModulePackages = [ ];
  boot.blacklistedKernelModules = [ "psmouse" "sof-audio-pci-intel-tgl" "sof_audio_pci_intel_tgl" ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/91b2fba8-f00a-4d8e-b336-aec835f78cd3";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-fd66369f-8038-4437-b5f1-519c670d0265".device = "/dev/disk/by-uuid/fd66369f-8038-4437-b5f1-519c670d0265";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/5A7B-EF36";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/c8b9b6f3-4e0e-43b3-bf3f-783689297349"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp1s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
